# multi platform build see https://github.com/laoshanxi/app-mesh/blob/main/.github/workflows/publish-github-release.yml

on:
  push:
    tags:
      - "*.*.*"

name: Create repository

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: arm64
            variant: v8
          - arch: amd64

    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.arch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Fetch Source code
        run: |
          wget https://confluence.ecmwf.int/download/attachments/45757960/eccodes-${{github.ref_name}}-Source.tar.gz?api=v2 -O eccodes.tar.gz
          tar -xzf eccodes.tar.gz
          mv eccodes-${{github.ref_name}}-Source eccodes

      - name: build with ubuntu22
        run: |
          build_dir=build_ubuntu22_${{ matrix.arch }}
          install_dir=install_ubuntu22_${{ matrix.arch }}
          docker run --platform ${{ matrix.arch }} --rm --volume ${{ github.workspace }}:/workspace --workdir /workspace ubuntu:jammy /bin/sh -c "apt-get update && apt-get -qq -y install gfortran ecbuild libjpeg-dev libpng-dev flex bison quilt swig doxygen libboost-dev libhdf5-dev chrpath libaec-dev libnetcdf-dev libopenjp2-7-dev; mkdir $build_dir $install_dir; cd $build_dir; cmake -DCMAKE_INSTALL_PREFIX=/usr -D ENABLE_ECCODES_THREADS=ON -D ENABLE_NETCDF=1 -D ENABLE_FORTRAN=0 -D ENABLE_JPG=1 -D ENABLE_MEMFS=0 ../eccodes; make -j4; make install DESTDIR=../$install_dir; ln -s /usr/lib/\`uname -m\`-linux-gnu/libeccodes.so ../$install_dir/usr/lib/\`uname -m\`-linux-gnu/libeccodes.so.0"

      - name: build with ubuntu24
        run: |
          build_dir=build_ubuntu24_${{ matrix.arch }}
          install_dir=install_ubuntu24_${{ matrix.arch }}
          docker run --platform ${{ matrix.arch }} --rm --volume ${{ github.workspace }}:/workspace --workdir /workspace ubuntu:noble /bin/sh -c "apt-get update && apt-get -qq -y install gfortran ecbuild libjpeg-dev libpng-dev flex bison quilt swig doxygen libboost-dev libhdf5-dev chrpath libaec-dev libnetcdf-dev libopenjp2-7-dev; mkdir $build_dir $install_dir; cd $build_dir; cmake -DCMAKE_INSTALL_PREFIX=/usr -D ENABLE_ECCODES_THREADS=ON -D ENABLE_NETCDF=1 -D ENABLE_FORTRAN=0 -D ENABLE_JPG=1 -D ENABLE_MEMFS=0 ../eccodes; make -j4; make install DESTDIR=../$install_dir; ln -s /usr/lib/\`uname -m\`-linux-gnu/libeccodes.so ../$install_dir/usr/lib/\`uname -m\`-linux-gnu/libeccodes.so.0"

      - name: Package ubuntu22
        uses: gravitl/github-action-fpm@master
        with:
          fpm_args: "."
          fpm_opts: "-s dir -t deb -a ${{ matrix.arch }} -C ./install_ubuntu22_${{ matrix.arch }} -n libeccodes0 -v ${{github.ref_name}} -d libaec0 -d libc6 -d libgfortran5 -d libgomp1 -d libopenjp2-7 -d libpng16-16 -d libnetcdf19 --replaces libeccodes-doc --replaces libeccodes-tools --replaces libeccodes-data --replaces libeccodes-dev --provides libeccodes-doc --provides libeccodes-tools --provides libeccodes-data --provides libeccodes-dev --conflicts libeccodes-doc --conflicts libeccodes-tools --conflicts libeccodes-data --conflicts libeccodes-dev"

      - name: Rename deb file
        run: |
          mv libeccodes0_${{github.ref_name}}_${{ matrix.arch }}.deb libeccodes0_${{github.ref_name}}_jammy_${{ matrix.arch }}.deb

      - name: Package ubuntu24
        uses: gravitl/github-action-fpm@master
        with:
          fpm_args: "."
          fpm_opts: "-s dir -t deb -a ${{ matrix.arch }} -C ./install_ubuntu24_${{ matrix.arch }} -n libeccodes0 -v ${{github.ref_name}} -d libaec0 -d libc6 -d libgfortran5 -d libgomp1 -d libopenjp2-7 -d libpng16-16 -d libnetcdf19 --replaces libeccodes-doc --replaces libeccodes-tools --replaces libeccodes-data --replaces libeccodes-dev --provides libeccodes-doc --provides libeccodes-tools --provides libeccodes-data --provides libeccodes-dev --conflicts libeccodes-doc --conflicts libeccodes-tools --conflicts libeccodes-data --conflicts libeccodes-dev"

      - name: Rename deb file
        run: |
          mv libeccodes0_${{github.ref_name}}_${{ matrix.arch }}.deb libeccodes0_${{github.ref_name}}_noble_${{ matrix.arch }}.deb

      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}
          path: |
            *.deb

  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - build
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
      - name: Download arm64 packages
        uses: actions/download-artifact@v4
        with:
          name: arm64
      - name: Download amd64 packages
        uses: actions/download-artifact@v4
        with:
          name: amd64

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          artifacts: |
            libeccodes0_${{github.ref_name}}_jammy_amd64.deb
            libeccodes0_${{github.ref_name}}_jammy_arm64.deb
            libeccodes0_${{github.ref_name}}_noble_amd64.deb
            libeccodes0_${{github.ref_name}}_noble_arm64.deb
          draft: false

      - name: Create API repo
        uses: patrick-zippenfenig/apt-repo-action@master
        with:
          repo_supported_arch: |
            amd64
            arm64
          repo_supported_version: |
            jammy
            noble
          file: libeccodes0_${{github.ref_name}}_jammy_amd64.deb
          file_target_version: jammy
          public_key: ${{ secrets.GPG_PUBLIC }}
          private_key: ${{ secrets.GPG_PRIVATE }}
          key_passphrase: ""

      - name: Create API repo
        uses: patrick-zippenfenig/apt-repo-action@master
        with:
          repo_supported_arch: |
            amd64
            arm64
          repo_supported_version: |
            jammy
            noble
          file: libeccodes0_${{github.ref_name}}_jammy_arm64.deb
          file_target_version: jammy
          public_key: ${{ secrets.GPG_PUBLIC }}
          private_key: ${{ secrets.GPG_PRIVATE }}
          key_passphrase: ""

      - name: Create API repo
        uses: patrick-zippenfenig/apt-repo-action@master
        with:
          repo_supported_arch: |
            amd64
            arm64
          repo_supported_version: |
            jammy
            noble
          file: libeccodes0_${{github.ref_name}}_noble_amd64.deb
          file_target_version: noble
          public_key: ${{ secrets.GPG_PUBLIC }}
          private_key: ${{ secrets.GPG_PRIVATE }}
          key_passphrase: ""

      - name: Create API repo
        uses: patrick-zippenfenig/apt-repo-action@master
        with:
          repo_supported_arch: |
            amd64
            arm64
          repo_supported_version: |
            jammy
            noble
          file: libeccodes0_${{github.ref_name}}_noble_arm64.deb
          file_target_version: noble
          public_key: ${{ secrets.GPG_PUBLIC }}
          private_key: ${{ secrets.GPG_PRIVATE }}
          key_passphrase: ""

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: repo
